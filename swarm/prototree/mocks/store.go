// Code generated by mockery v2.8.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	types "redwood.dev/types"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// AddSubscribedStateURI provides a mock function with given fields: stateURI
func (_m *Store) AddSubscribedStateURI(stateURI string) error {
	ret := _m.Called(stateURI)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(stateURI)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MarkTxSeenByPeer provides a mock function with given fields: deviceSpecificID, stateURI, txID
func (_m *Store) MarkTxSeenByPeer(deviceSpecificID string, stateURI string, txID types.ID) error {
	ret := _m.Called(deviceSpecificID, stateURI, txID)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, types.ID) error); ok {
		r0 = rf(deviceSpecificID, stateURI, txID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MaxPeersPerSubscription provides a mock function with given fields:
func (_m *Store) MaxPeersPerSubscription() uint64 {
	ret := _m.Called()

	var r0 uint64
	if rf, ok := ret.Get(0).(func() uint64); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(uint64)
	}

	return r0
}

// OnNewSubscribedStateURI provides a mock function with given fields: handler
func (_m *Store) OnNewSubscribedStateURI(handler func(string)) func() {
	ret := _m.Called(handler)

	var r0 func()
	if rf, ok := ret.Get(0).(func(func(string)) func()); ok {
		r0 = rf(handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func())
		}
	}

	return r0
}

// RemoveSubscribedStateURI provides a mock function with given fields: stateURI
func (_m *Store) RemoveSubscribedStateURI(stateURI string) error {
	ret := _m.Called(stateURI)

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(stateURI)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SetMaxPeersPerSubscription provides a mock function with given fields: max
func (_m *Store) SetMaxPeersPerSubscription(max uint64) error {
	ret := _m.Called(max)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64) error); ok {
		r0 = rf(max)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubscribedStateURIs provides a mock function with given fields:
func (_m *Store) SubscribedStateURIs() types.StringSet {
	ret := _m.Called()

	var r0 types.StringSet
	if rf, ok := ret.Get(0).(func() types.StringSet); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(types.StringSet)
		}
	}

	return r0
}

// TxSeenByPeer provides a mock function with given fields: deviceSpecificID, stateURI, txID
func (_m *Store) TxSeenByPeer(deviceSpecificID string, stateURI string, txID types.ID) bool {
	ret := _m.Called(deviceSpecificID, stateURI, txID)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, string, types.ID) bool); ok {
		r0 = rf(deviceSpecificID, stateURI, txID)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}
