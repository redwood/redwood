syntax = "proto3";

package Redwood.tree;
option go_package = "redwood.dev/tree/pb";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "state/pb/state.proto";

option (gogoproto.gostring_all) = true;
option (gogoproto.equal_all) = true;
option (gogoproto.verbose_equal_all) = true;
option (gogoproto.goproto_stringer_all) = false;
option (gogoproto.stringer_all) =  true;
option (gogoproto.populate_all) = true;
option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;


message Tx {
    // See note on the Patch message
    option (gogoproto.testgen) = false;

    bytes id = 1                  [(gogoproto.customtype) = "redwood.dev/state.Version",   (gogoproto.nullable) = false, (gogoproto.customname) = "ID"];
    repeated bytes parents = 2    [(gogoproto.customtype) = "redwood.dev/state.Version",   (gogoproto.nullable) = false];
    repeated bytes children = 3   [(gogoproto.customtype) = "redwood.dev/state.Version",   (gogoproto.nullable) = false];
    bytes from = 4                [(gogoproto.customtype) = "redwood.dev/types.Address",   (gogoproto.nullable) = false];
    bytes sig = 5                 [(gogoproto.customtype) = "redwood.dev/crypto.Signature", (gogoproto.nullable) = false];
    string stateURI = 6;
    repeated Patch patches = 7    [(gogoproto.nullable) = false];
    bool checkpoint = 8;
    bytes attachment = 9;
    TxStatus status = 10;

    // repeated bytes recipients = 8 [(gogoproto.customtype) = "redwood.dev/types.Address",   (gogoproto.nullable) = false];
}

enum TxStatus {
    Unknown = 0   [(gogoproto.enumvalue_customname) = "TxStatusUnknown"];
    InMempool = 1 [(gogoproto.enumvalue_customname) = "TxStatusInMempool"];
    Invalid = 2   [(gogoproto.enumvalue_customname) = "TxStatusInvalid"];
    Valid = 3     [(gogoproto.enumvalue_customname) = "TxStatusValid"];
}

message Patch {
    option (gogoproto.stringer) = false;
    option (gogoproto.testgen) = false;

    bytes keypath = 1 [(gogoproto.customtype) = "redwood.dev/state.Keypath", (gogoproto.nullable) = false];
    Redwood.state.Range range = 2;
    bytes valueJSON = 3;
}

